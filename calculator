import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class calculator {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Введите арифметическое выражение (например, 2 + 3 или II * V):");
        String input = scanner.nextLine();

        try {
            String[] parts = input.split(" ");
            if (parts.length != 3)
                throw new IllegalArgumentException("Неправильный формат ввода");

            String leftStr = parts[0];
            String operator = parts[1];
            String rightStr = parts[2];

            boolean isRoman = isRoman(leftStr) && isRoman(rightStr);
            int left = convertToInt(leftStr, isRoman);
            int right = convertToInt(rightStr, isRoman);

            if (left < 1 || left > 10 || right < 1 || right > 10)
                throw new IllegalArgumentException("Числа должны быть в диапазоне от 1 до 10");

            int result;
            switch (operator) {
                case "+":
                    result = left + right;
                    break;
                case "-":
                    result = left - right;
                    break;
                case "*":
                    result = left * right;
                    break;
                case "/":
                    if (right == 0)
                        throw new ArithmeticException("Деление на ноль");
                    result = left / right;
                    break;
                default:
                    throw new IllegalArgumentException("Неподдерживаемая операция: " + operator);
            }

            if (isRoman) {
                if (result <= 0)
                    throw new IllegalArgumentException("Результат работы калькулятора с римскими числами не может быть меньше или равен нулю");
                System.out.println(toRoman(result));
            } else {
                System.out.println(result);
            }

        } catch (Exception e) {
            System.err.println("Ошибка: " + e.getMessage());
        }
    }

    private static boolean isRoman(String input) {
        return input.matches("[IVXLCDM]+");
    }

    private static int convertToInt(String input, boolean isRoman) {
        if (isRoman) {
            int result = 0;
            int prevValue = 0;
            for (int i = input.length() - 1; i >= 0; i--) {
                int value = romanMap.get(input.charAt(i));
                if (value < prevValue)
                    result -= value;
                else
                    result += value;
                prevValue = value;
            }
            return result;
        } else {
            return Integer.parseInt(input);
        }
    }

    private static final Map<Character, Integer> romanMap = new HashMap<>();
    static {
        romanMap.put('I', 1);
        romanMap.put('V', 5);
        romanMap.put('X', 10);
    }

    private static String toRoman(int num) {
        if (num < 1)
            throw new IllegalArgumentException("Римские числа не могут быть меньше или равны нулю");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < romanSymbols.length; i++) {
            while (num >= romanValues[i]) {
                num -= romanValues[i];
                sb.append(romanSymbols[i]);
            }
        }
        return sb.toString();
    }

    private static final int[] romanValues = {10, 9, 5, 4, 1};
    private static final String[] romanSymbols = {"X", "IX", "V", "IV", "I"};
}
